//----- (00028A02) --------------------------------------------------------
typedef struct {
	playerState_t ps;
	usercmd_t cmd;
	//unknown
} pmove_t;

pmove_t pm;

int __cdecl Pmove(pmove_t *pmove)
{
  int result; // eax@1
  int msec; // [sp+Ch] [bp-Ch]@8
  int finalTime; // [sp+10h] [bp-8h]@1

  finalTime = pmove->cmd.serverTime;//finalTime = *(_DWORD *)(pmove + 4);
  result = finalTime;
  if ( finalTime >= **(_DWORD **)pmove )
  {
    if ( finalTime > **(_DWORD **)pmove + 1000 )
      pmove->ps->commandTime = finalTime - 1000; //**(_DWORD **)pmove = finalTime - 1000;
    pm = pmove;
    pm->numtouch = 0;//*(_DWORD *)(pm + 60) = 0;
    while ( 1 )
    {
      result = **(_DWORD **)pmove;
      if ( result == finalTime )
        break;
      msec = finalTime - pmove->ps->commandTime;//**(_DWORD **)pmove;
      if ( pmove->pmove_fixed ) {//if ( *(_DWORD *)(pmove + 224) )
      {
        if ( msec > pmove->pmove_msec ) {//if ( msec > *(_DWORD *)(pmove + 228) )
          msec = pmove->pmove_msec;//msec = *(_DWORD *)(pmove + 228);
      }
      else
      {
        if ( msec > 66 )
          msec = 66;
      }
      pmove->cmd.serverTime = pmove->ps->commandTime + msec;//*(_DWORD *)(pmove + 4) = **(_DWORD **)pmove + msec;
      PmoveSingle(pmove);
      if ( pmove->ps->pm_flags & PMF_JUMP_HELD )//if ( *(_DWORD *)(*(_DWORD *)pmove + 12) & 8 )
        pmove->cmd.upmove = 20;//*(_BYTE *)(pmove + 26) = 20;
    }
  }
  return result;
}